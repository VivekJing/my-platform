{
    "type": "page",
    "title": "Welcome to Steedos",
    "body": [
      {
        "type": "steedos-object-form",
        "className": "sm:border sm:shadow sm:rounded sm:border-gray-300 bg-white p-4",
        "label": "对象表单",
        "objectApiName": "apps",
        "recordId": "${recordId}",
        "mode": "edit",
        "fieldsExtend": "{\n  \"tab_items\": {\n    \"amis\": {\n      \"name\": \"tab_items\",\n      \"type\": \"crud\",\n      \"source\": \"\\${tab_items}\",\n      \"strictMode\": true,\n      \"affixHeader\": false,\n      \"editable\": true,\n      \"addable\": false,\n      \"removable\": true,\n      \"draggable\": false,\n      \"headerToolbarClassName\": \"px-1 pb-3\",\n      \"columns\": [\n        {\n          \"name\": \"index\",\n          \"label\": \"\\${'apps.apps_form.tab_number'| t}\",\n          \"type\": \"tpl\",\n          \"tpl\": \"\\${index+1}\",\n          \"className\": \"w-10\",\n          \"id\": \"u:c59784421c37\"\n        },\n        {\n          \"name\": \"tab_name_label\",\n          \"label\": \"\\${'apps.apps_form.tab' | t}\",\n          \"type\": \"tpl\",\n          \"id\": \"u:b95c69a1cd84\",\n          \"tpl\": \"\\${tabs_options|filter:value:equals:tab_name|pick:label}\"\n        },\n        {\n          \"name\": \"group\",\n          \"label\": \"\\${'apps.apps_form.tab_grouping' | t}\",\n          \"id\": \"u:e532b1949676\",\n          \"quickEdit\": {\n            \"type\": \"select\",\n            \"name\": \"group\",\n            \"className\": \"m-0\",\n            \"onEvent\": {\n              \"change\": {\n                \"actions\": [\n                  {\n                    \"actionType\": \"custom\",\n                    \"script\": \"const tabGroupKey = \\\"group\\\";const getTabsSortFun = function (groupNames) {  return function (m, n) {    var tempM = !!m[tabGroupKey] ? 1 : 0;    var tempN = !!n[tabGroupKey] ? 1 : 0;    if (!m[tabGroupKey] || !n[tabGroupKey]) {      return tempM - tempN;    }    return groupNames.indexOf(m[tabGroupKey]) - groupNames.indexOf(n[tabGroupKey]);  };};const quickEidtSaveForTab = function (input, prop_name) {  const currentPropValue = input.value;  const rowValue = input.__super;  const formValue = input.__super.__super.__super;  const tab_name = rowValue.tab_name;  rowValue[prop_name] = currentPropValue;  delete rowValue.index;  let newTabs = formValue.tab_items.map(function (item) {    if (item.tab_name == tab_name) {      return Object.assign({}, item, rowValue);    }    else {      return item;    }  });  const tabGroups = input.__super.__super.tab_groups;  const groupNames = _.compact(_.map(tabGroups, \\\"group_name\\\"));  if (groupNames && groupNames.length) {    newTabs.sort(getTabsSortFun(groupNames));  }  return {    tab_items: newTabs  }};const eventData = event.data;const newTabTtemsProp = quickEidtSaveForTab(eventData, \\\"group\\\");setTimeout(function () {   doAction({    actionType: 'setValue',    componentId: \\\"object_form\\\",    args: {      value: newTabTtemsProp    }  });},300);\"\n                  }\n                ]\n              }\n            },\n            \"source\": \"\\${tab_groups|pick:group_name}\",\n            \"checkAll\": false,\n            \"selectFirst\": false,\n            \"searchable\": true,\n            \"clearable\": true,\n            \"id\": \"u:8b3d6979e884\",\n            \"multiple\": false,\n            \"mode\": \"inline\"\n          },\n          \"placeholder\": \"-\"\n        },\n        {\n          \"name\": \"tab_name_desktop\",\n          \"label\": \"\\${'apps.apps_form.tab_desktop' | t}\",\n          \"type\": \"tpl\",\n          \"id\": \"u:b95c69a1cd84\",\n          \"tpl\": \"\\${tabs_options|filter:value:equals:tab_name|first|pick:desktop|isTrue:'✔':'✘'}\",\n          \"placeholder\": \"-\",\n          \"remark\": \"\\${'apps.apps_form.tab_desktop_remark' | t}\"\n        },\n        {\n          \"name\": \"tab_name_mobile\",\n          \"label\": \"\\${'apps.apps_form.tab_mobile' | t}\",\n          \"type\": \"tpl\",\n          \"id\": \"u:b95c69a1cd84\",\n          \"tpl\": \"\\${tabs_options|filter:value:equals:tab_name|first|pick:mobile|isTrue:'✔':'✘'}\",\n          \"placeholder\": \"-\",\n          \"remark\": \"\\${'apps.apps_form.tab_mobile_remark' | t}\"\n        }\n      ],\n      \"headerToolbar\": [\n        {\n          \"type\": \"service\",\n          \"id\": \"tabs-options-service\",\n          \"body\": [\n            {\n              \"type\": \"button\",\n              \"id\": \"u:a35a2276145d\",\n              \"label\": \"${'apps.apps_form.tab_generate' | t}\",\n              \"onEvent\": {\n                \"click\": {\n                  \"actions\": [\n                    {\n                      \"script\": \"const appId = null;  const page = Steedos.Page.getPage('app', appId, null, null, 'generate_object_tabs');  if (page && page.schema) {    const pageSchema = JSON.parse(page.schema);    let formSchema = pageSchema.body[0];    formSchema.canAccessSuperData = false;    formSchema.wrapWithPanel = false;    formSchema.className = 'steedos-amis-form';    const title = t('apps.apps_form.tab_generate_title');    doAction({      'actionType': 'dialog',      'dialog': {        'type': 'dialog',        'title': title,        'body': formSchema,        'size': 'lg'      }    });  }\",\n                      \"actionType\": \"custom\"\n                    }\n                  ],\n                  \"weight\": 0\n                }\n              },\n              \"tpl\": \"内容\"\n            },\n            {\n              \"type\": \"button\",\n              \"label\": \"${'apps.apps_form.tab_set' | t}\",\n              \"id\": \"u:853b890ab524\",\n              \"actionType\": \"dialog\",\n              \"dialog\": {\n                \"type\": \"dialog\",\n                \"title\": \"${'apps.apps_form.tab_set' | t}\",\n                \"body\": [\n                  {\n                    \"type\": \"transfer\",\n                    \"name\": \"picked_tabs\",\n                    \"value\": \"\\${tab_items|pick:tab_name}\",\n                    \"sortable\": true,\n                    \"source\": \"\\${tabs_options}\",\n                    \"searchable\": true,\n                    \"id\": \"u:f2d36873abd1\"\n                  }\n                ],\n                \"onEvent\": {\n                  \"confirm\": {\n                    \"actions\": [\n                      {\n                        \"actionType\": \"custom\",\n                        \"script\": \"const tabGroupKey = 'group';const getTabsSortFun = function (groupNames) {  return function (m, n) {    var tempM = !!m[tabGroupKey] ? 1 : 0;    var tempN = !!n[tabGroupKey] ? 1 : 0;    if (!m[tabGroupKey] || !n[tabGroupKey]) {      return tempM - tempN;    }    return groupNames.indexOf(m[tabGroupKey]) - groupNames.indexOf(n[tabGroupKey]);  };};const clearTabs = function (input) {   return {    tab_items: []  }};const convertDataForTabs = function (input) {  let pickedTabs = input.picked_tabs || [];  const superTabs = _.keyBy(input.__super.__super.tab_items, 'tab_name');  if (typeof pickedTabs === 'string') {    pickedTabs = pickedTabs.split(',');  } const tabOptions = _.keyBy(input.__super.tabs_options, 'value');  const convertedTabs = pickedTabs.map(function (tab_name) {    const superTab = superTabs[tab_name];    if (superTab) {      return superTab;    }    else {      const tabOption = tabOptions[tab_name];      return {        tab_name: tab_name,        group: tabOption.group      }    }  });   const tabGroups = input.__super.__super.tab_groups;   const groupNames = _.compact(_.map(tabGroups, 'group_name'));   if (groupNames && groupNames.length) {     convertedTabs.sort(getTabsSortFun(groupNames));   }  return {    tab_items: convertedTabs  }};const eventData = event.data;doAction({  actionType: 'setValue',  componentId: 'object_form',  args: {    value: convertDataForTabs(eventData)  }});doAction({  actionType: 'setValue',  componentId: 'tabs-options-service',  args: {    value: convertDataForTabs(eventData)  }});\"\n                      }\n                    ]\n                  }\n                },\n                \"size\": \"lg\",\n                \"id\": \"u:9c93896a73cf\",\n                \"closeOnEsc\": false,\n                \"closeOnOutside\": false,\n                \"showCloseButton\": true,\n                \"showErrorMsg\": true,\n                \"showLoading\": true,\n                \"dataMapSwitch\": false\n              }\n            },\n            {\n              \"type\": \"button\",\n              \"label\": \"${'apps.apps_form.tab_grouping_set' | t}\",\n              \"actionType\": \"dialog\",\n              \"dialog\": {\n                \"title\": \"${'apps.apps_form.tab_grouping_set' | t}\",\n                \"body\": [\n                  {\n                    \"type\": \"input-table\",\n                    \"name\": \"setting_groups\",\n                    \"value\": \"\\${tab_groups}\",\n                    \"addable\": true,\n                    \"draggable\": true,\n                    \"editable\": true,\n                    \"needConfirm\": false,\n                    \"columns\": [\n                      {\n                        \"name\": \"group_name\",\n                        \"label\": \"${'apps.apps_form.tab_grouping_name' | t}\",\n                        \"id\": \"u:383c7744b499\"\n                      },\n                      {\n                        \"name\": \"default_open\",\n                        \"label\": \"${'apps.apps_form.tab_grouping_open' | t}\",\n                        \"id\": \"u:7a243c84ed66\",\n                        \"type\": \"checkbox\",\n                        \"value\": true\n                      }\n                    ],\n                    \"removable\": true,\n                    \"id\": \"setting_groups\"\n                  }\n                ],\n                \"onEvent\": {\n                  \"confirm\": {\n                    \"actions\": [\n                      {\n                        \"actionType\": \"custom\",\n                        \"script\": \"const tabGroupKey = 'group';const getTabsSortFun = function (groupNames) { return function (m, n) { var tempM = !!m[tabGroupKey] ? 1 : 0; var tempN = !!n[tabGroupKey] ? 1 : 0; if (!m[tabGroupKey] || !n[tabGroupKey]) { return tempM - tempN; } return groupNames.indexOf(m[tabGroupKey]) - groupNames.indexOf(n[tabGroupKey]); };};const clearTabs = function (input) { return { tab_items: [] }};const convertDataForGroups = function(input) { const settingGroups = input.setting_groups || []; const convertedGroups = _.uniqBy(settingGroups.map(function (item) { return { group_name: item.group_name, default_open: item.default_open } }), 'group_name'); const groupNames = _.compact(_.map(convertedGroups, 'group_name')); const tab_items = input.tab_items; tab_items?.sort(getTabsSortFun(groupNames)); return { tab_groups: convertedGroups, tab_items: tab_items }};const eventData = event.data;doAction({ actionType: 'setValue', componentId: 'object_form', args: { value: convertDataForGroups(eventData) }});\"\n                      }\n                    ]\n                  }\n                },\n                \"type\": \"dialog\",\n                \"size\": \"lg\",\n                \"id\": \"setting_groups\",\n                \"closeOnEsc\": false,\n                \"closeOnOutside\": false,\n                \"showCloseButton\": true,\n                \"showErrorMsg\": true,\n                \"showLoading\": true,\n                \"dataMapSwitch\": false\n              },\n              \"id\": \"u:111b043b193c\"\n            }\n          ],\n          \"messages\": \"\",\n          \"api\": {\n            \"method\": \"post\",\n            \"url\": \"\\${context.rootUrl}/graphql\",\n            \"adaptor\": \" let data = payload.data;  data.tabs_options = [];  if (data.options && data.options.length) {    data.tabs_options = data.options.map(function (option) {       option.label = option.label + '(' + option.value + ')';      return option;    });  }  if (!api.body.recordId) {    const defaultValues = {      is_creator: true,      mobile: true,      visible: true,      sort: 9100    }    ;data = Object.assign({}, data, defaultValues);  }  delete data.options  ;payload.data = data;  return payload;  \",\n            \"data\": {\n              \"query\": \"{options:tabs{_id label:label value:name,type,object,desktop,mobile}}\",\n              \"recordId\": \"\\${recordId}\"\n            },\n            \"headers\": {\n              \"Authorization\": \"Bearer \\${context.tenantId},\\${context.authToken}\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"objects\": {\n    \"amis\": {\n      \"name\": \"objects\",\n      \"type\": \"select\",\n      \"className\": \"m-0\",\n      \"labelClassName\": \"text-left\",\n      \"id\": \"u:4e5047e44905\",\n      \"joinValues\": false,\n      \"extractValue\": true,\n      \"labelField\": \"label\",\n      \"valueField\": \"value\",\n      \"multiple\": true,\n      \"checkAll\": false,\n      \"searchable\": true,\n      \"menuTpl\": \"\",\n      \"source\": {\n        \"method\": \"get\",\n        \"url\": \"${context.rootUrl}/service/api/amis-metadata-objects/objects/options\",\n        \"headers\": {\n          \"Authorization\": \"Bearer ${context.tenantId},${context.authToken}\"\n        }\n      },\n      \"autoComplete\": \"\"\n    }\n  },\n  \"mobile_objects\": {\n    \"amis\": {\n      \"name\": \"mobile_objects\",\n      \"type\": \"select\",\n      \"className\": \"m-0\",\n      \"labelClassName\": \"text-left\",\n      \"id\": \"u:cfaeb2f857a8\",\n      \"joinValues\": false,\n      \"extractValue\": true,\n      \"labelField\": \"label\",\n      \"valueField\": \"value\",\n      \"multiple\": true,\n      \"checkAll\": false,\n      \"searchable\": true,\n      \"menuTpl\": \"\",\n      \"source\": {\n        \"method\": \"get\",\n        \"url\": \"${context.rootUrl}/service/api/amis-metadata-objects/objects/options\",\n        \"messages\": {},\n        \"headers\": {\n          \"Authorization\": \"Bearer ${context.tenantId},${context.authToken}\"\n        }\n      },\n      \"autoComplete\": \"\"\n    }\n  }\n}",
        "enableTabs": true,
        "debug": false,
        "initApiRequestAdaptor": "",
        "initApiAdaptor": "var data = payload.data;\nif (data.tab_items && !_.isArray(data.tab_items)) {\n    // 数据库中存储的是对象格式而不是数组，转换为数组用于界面显示\n    let arrTabItems = [];\n    _.each(data.tab_items, function (n, k) {\n        n.tab_name = k;\n        delete n.index;\n        arrTabItems.push(n);\n    });\n    data.tab_items = arrTabItems;\n}\nif (data._id && !data.tab_items) {\n    const tabOptions = data.tabs_options || [];\n    const tabItems = [];\n    // 把应用中原来tabs属性值添加到新的tab_items属性的默认值中\n    if (data.tabs && data.tabs.length) {\n        data.tabs.forEach(function (item) {\n            tabItems.push({ tab_name: item });\n        });\n    }\n    const pushObjectsToTabItems = function (objects) {\n        objects.forEach(function (item) {\n            // 已经有绑定到指定对象的选项卡就不添加\n            let existObjectItem = !!tabItems.find(function (tabItem) {\n                return !!tabOptions.find(function (option) {\n                    return tabItem.tab_name === tabItem.value && option.object === item;\n                });\n            });\n            if (existObjectItem) {\n                return;\n            }\n            // 找到指向指定对象的选项卡\n            let tempOption = tabOptions.find(function (option) {\n                return option.type === \"object\" && option.object === item;\n            });\n            if (!tempOption) {\n                return;\n            }\n            // 选项卡名称如果重复了就不添加\n            let existTabItem = !!tabItems.find(function (tabItem) {\n                return tabItem.tab_name === tempOption.value;\n            });\n            if (existTabItem) {\n                return;\n            }\n            if (tempOption) {\n                tabItems.push({ tab_name: tempOption.value });\n            }\n        });\n    }\n    // 把应用中原来objects属性值添加到新的tab_items属性的默认值中\n    if (data.objects && data.objects.length) {\n        pushObjectsToTabItems(data.objects);\n    }\n    // 把应用中原来mobile_objects属性值添加到新的tab_items属性的默认值中\n    if (data.mobile_objects && data.mobile_objects.length) {\n        pushObjectsToTabItems(data.mobile_objects);\n    }\n    data.tab_items = tabItems;\n}\n\npayload.data = data;\ndelete payload.extensions;\nreturn payload;\n        ",
        "apiRequestAdaptor": "delete formData.tabs_options;\nconst recordId = formData.recordId;\n\n// 新加字段tab_items，值同步回传到老字段tabs中兼容老UI界面\nformData.tabs = [];\nif (formData.tab_items && formData.tab_items.length) { \n    formData.tabs = formData.tab_items.map(function (item) { return item.tab_name; });\n}\n\n/*\ntab_items存储为：\ntab_items: {\n  test1:{\n    group:\"xxx\"\n  },\n  test3:{\n    group:\"yyy\"\n  }\n}\n而不是：\ntab_items: [\n  {\n    \"index\":1,\n    \"group\":\"xxx\"\n  },\n  {\n    \"index\":2,\n    \"group\":\"yyy\"\n  }\n]\n*/\nif (formData.tab_items) { \n    formData.tab_items = _.keyBy(formData.tab_items, \"tab_name\")\n    let tempIndex = 0;\n    _.each(formData.tab_items, function (n, k) {\n      tempIndex++;\n      n.index = tempIndex;\n      delete n.tab_name;\n    });\n}\n\nquery = `mutation{record: ${objectName}__insert(doc: {__saveData}){_id}}`;\nif(recordId){\n    query = `mutation{record: ${objectName}__update(id: \"${recordId}\", doc: {__saveData}){_id}}`;\n};\n__saveData = JSON.stringify(JSON.stringify(formData));\n\napi.data = {query: query.replace('{__saveData}', __saveData)};\nreturn api;\n",
        "apiAdaptor": "",
        "form": {
          "id": "object_form"
        },
        "id": "u:e1c1a841d373"
      }
    ],
    "regions": [
      "body"
    ],
    "data": {
      "objectName": "apps",
      "initialValues": {
      },
      "appId": "builder",
      "title": "",
      "context": {
        "rootUrl": "http://127.0.0.1:5800",
        "tenantId": "649bd0e96d6ec67c19dca38f",
        "userId": "30e565d1-f2d3-4bb7-8895-8a16ab436c1a",
        "authToken": "b65ec19a85dcf7899b663b85f65c606c05e2ab73d86482c299904d9ebdc81211c0cd407df26ac43fbfea20"
      }
    },
    "id": "u:de840f3523f2"
  }