name: cms_categories
icon: folder
label: Category
hidden: false
fields:
  name:
    label: Name
    type: text
    defaultValue: ''
    description: ''
    inlineHelpText: ''
    index: true
    required: true
    searchable: true
    is_wide: true
  description:
    label: Description
    type: textarea
    rows: 3
    is_wide: true
  site:
    label: Site
    type: lookup
    reference_to: cms_sites
    required: true
    sortable: true
    index: true
    filtersFunction: !!js/function |
      function (filters, values) {
        if(!Steedos.isSpaceAdmin()){
          var userId = Steedos.userId();
          return ["admins", "=", userId];
        }
        return [];
      }
  parent:
    label: Parent Category
    type: lookup
    reference_to: cms_categories
    sortable: true
    depend_on:
      - site
    filtersFunction: !!js/function |
      function (filters, values) {
        if (!values || !values.site) {
          return ["_id", "=", null];
        }
        return ["site", "=", values.site];
      }
  parents:
    label: All Parent Categories
    type: lookup
    reference_to: cms_categories
    sortable: true
    omit: true
    hidden: true
  order:
    label: Sort Number
    type: number
  # show post list on website homepage
  featured:
    type: boolean
    defaultValue: true
    hidden: true
    omit: true
list_views:
  all:
    label: All Categories
    filter_scope: space
    columns:
      - name
      - site
      - parent
      - order
    filters: !<tag:yaml.org,2002:js/function> |-
      function () {
        if(!Steedos.isSpaceAdmin()){
          try {
            var userId = Steedos.userId();
            var queryFilters = ["admins", "=", userId];
            var queryResult = Steedos.authRequest("/graphql", {
              type: 'POST', async: false,
              data: JSON.stringify({
                query: "{ cms_sites(filters: " + JSON.stringify(queryFilters) + "){ _id } }"
              })
            });
            var sites = queryResult && queryResult.data && queryResult.data.cms_sites;
            return [["site", "in", _.map(sites, "_id")]];
          } catch (e) {
            return ["_id", "=", null];
          }
        }
      }
permission_set:
  user:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: false
    viewAllRecords: true
  admin:
    allowCreate: true
    allowDelete: true
    allowEdit: true
    allowRead: true
    modifyAllRecords: true
    viewAllRecords: true