function module(e,t,n){"use strict";var i=e("../core/renderer"),s=e("../events/core/events_engine"),c=e("../core/devices"),a=e("../core/utils/extend").extend,o=e("./widget/utils.ink_ripple"),r=e("./editor/editor"),l=e("../core/component_registrator"),d=e("../events/utils"),h=e("./themes"),u=e("../events/click"),p="dx-checkbox",_="dx-checkbox-icon",x="dx-checkbox-checked",k="dx-checkbox-container",v="dx-checkbox-text",m="dx-checkbox-has-text",f="dx-checkbox-indeterminate",b=100,$=r.inherit({_supportedKeys:function(){var e=function(e){e.preventDefault(),this._clickAction({event:e})};return a(this.callBase(),{space:e})},_getDefaultOptions:function(){return a(this.callBase(),{hoverStateEnabled:!0,activeStateEnabled:!0,value:!1,text:"",useInkRipple:!1})},_defaultOptionsRules:function(){return this.callBase().concat([{device:function(){return"desktop"===c.real().deviceType&&!c.isSimulator()},options:{focusStateEnabled:!0}},{device:function(){return h.isAndroid5()},options:{useInkRipple:!0}}])},_canValueBeChangedByClick:function(){return!0},_feedbackHideTimeout:100,_initMarkup:function(){this._renderSubmitElement(),this._$container=i("<div>").addClass("dx-checkbox-container"),this.setAria("role","checkbox"),this.$element().addClass("dx-checkbox"),this._renderValue(),this._renderIcon(),this._renderText(),this.option("useInkRipple")&&this._renderInkRipple(),this.$element().append(this._$container),this.callBase()},_render:function(){this._renderClick(),this.callBase()},_renderSubmitElement:function(){this._$submitElement=i("<input>").attr("type","hidden").appendTo(this.$element())},_getSubmitElement:function(){return this._$submitElement},_renderInkRipple:function(){this._inkRipple=o.render({waveSizeCoefficient:2.5,useHoldAnimation:!1,wavesNumber:2,isCentered:!0})},_renderInkWave:function(e,t,n,i){if(this._inkRipple){var s={element:e,event:t,wave:i};n?this._inkRipple.showWave(s):this._inkRipple.hideWave(s)}},_updateFocusState:function(e,t){this.callBase.apply(this,arguments),this._renderInkWave(this._$icon,e,t,0)},_toggleActiveState:function(e,t,n){this.callBase.apply(this,arguments),this._renderInkWave(this._$icon,n,t,1)},_renderIcon:function(){this._$icon=i("<span>").addClass("dx-checkbox-icon").prependTo(this._$container)},_renderText:function(){var e=this.option("text");e?(this._$text||(this._$text=i("<span>").addClass("dx-checkbox-text")),this._$text.text(e),this._$container.append(this._$text),this.$element().addClass("dx-checkbox-has-text")):this._$text&&(this._$text.remove(),this.$element().removeClass("dx-checkbox-has-text"))},_renderClick:function(){var e=this,t=d.addNamespace(u.name,e.NAME);e._clickAction=e._createAction(e._clickHandler),s.off(e.$element(),t),s.on(e.$element(),t,(function(t){e._clickAction({event:t})}))},_clickHandler:function(e){var t=e.component;t._saveValueChangeEvent(e.event),t.option("value",!t.option("value"))},_renderValue:function(){var e=this.$element(),t=this.option("value"),n=void 0===t;e.toggleClass("dx-checkbox-checked",Boolean(t)),e.toggleClass("dx-checkbox-indeterminate",n),this._$submitElement.val(t),this.setAria("checked",n?"mixed":t||"false")},_optionChanged:function(e){switch(e.name){case"useInkRipple":this._invalidate();break;case"value":this._renderValue(),this.callBase(e);break;case"text":this._renderText(),this._renderDimensions();break;default:this.callBase(e)}},_clean:function(){delete this._inkRipple,this.callBase()}});l("dxCheckBox",$),n.exports=$,n.exports.default=n.exports}

